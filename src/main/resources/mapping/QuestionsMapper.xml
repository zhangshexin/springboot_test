<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sam.sct.mytest.mapper.QuestionsMapper" >
  <resultMap id="BaseResultMap" type="com.sam.sct.mytest.entity.Questions" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="special_id" property="specialId" jdbcType="INTEGER" />
    <result column="question" property="question" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, special_id, question, answer, status, create_date, update_date, `type`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_questions
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_questions
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sam.sct.mytest.entity.Questions" >
    insert into t_questions (id, special_id, question, 
      answer, status, create_date, 
      update_date, `type`)
    values (#{id,jdbcType=INTEGER}, #{specialId,jdbcType=INTEGER}, #{question,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sam.sct.mytest.entity.Questions" >
    insert into t_questions
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="specialId != null" >
        special_id,
      </if>
      <if test="question != null" >
        question,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="type != null" >
        `type`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="specialId != null" >
        #{specialId,jdbcType=INTEGER},
      </if>
      <if test="question != null" >
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sam.sct.mytest.entity.Questions" >
    update t_questions
    <set >
      <if test="specialId != null" >
        special_id = #{specialId,jdbcType=INTEGER},
      </if>
      <if test="question != null" >
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sam.sct.mytest.entity.Questions" >
    update t_questions
    set special_id = #{specialId,jdbcType=INTEGER},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      `type` = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--add by sam-->
  <!--返回所有状态为正常的且以更新时间倒序-->
  <select id="selectAll" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from t_questions
    WHERE status = #{status,jdbcType=INTEGER} and special_id=#{specialId,jdbcType=INTEGER} ORDER BY update_date DESC
  </select>

  <!--返回指定的specialId对应的考试，用于人员管理专题组-->
  <select id="selectBySpecialId"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_questions
    WHERE status = 1 and id IN
    <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <!--批量逻辑删除-->
  <update id="deleteQuestion">
    UPDATE t_questions
    SET status = 0
    where id IN
    <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>

  <!--批量恢复-->
  <update id="recoverQuestion">
    UPDATE t_questions
    SET status = 0
    where id IN
    <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>

  <!--返回指定的专题的随机数量的考题；这个sql是无法保证随机个数与要求一样多的，所以需要判断，不否合的需要执行多次-->
  <select id="getRandomQuestionsListByCount" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT * FROM t_questions WHERE
    id >= (SELECT  floor(RAND() * (SELECT MAX(id) FROM t_questions))) and special_id = #{specialId,jdbcType=INTEGER} and status = 1
    ORDER BY id LIMIT ${c};
  </select>

  <!--返回指定专题的所有考题-->
  <select id="getAllQuestions" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_questions
    WHERE status = #{status} and special_id = #{specialId} ORDER BY update_date DESC
  </select>

  <!--返回数据总条数-->
  <select id="getQuestionsCount" resultType="java.lang.Integer">
    select count(id) from t_questions where status = 1
  </select>

  <!--返回对应专题数据总条数-->
  <select id="getQuestionsCountBySpecialId" resultType="java.lang.Integer"  parameterType="java.lang.Integer">
    select count(id) from t_questions where status = 1 and special_id = #{specialId}
  </select>
</mapper>