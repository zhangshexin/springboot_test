<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sam.sct.mytest.mapper.GradeMapper">
    <resultMap id="BaseResultMap" type="com.sam.sct.mytest.entity.Grade">
        <id column="idt" property="idt" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="grade" property="grade" jdbcType="INTEGER"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="updata_date" property="updataDate" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="special_id" property="specialId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    idt, user_id, grade, create_date, updata_date, status
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_grade
        where idt = #{idt,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_grade
    where idt = #{idt,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.sam.sct.mytest.entity.Grade" keyProperty="idt" useGeneratedKeys="true">
    insert into t_grade (idt, user_id, grade, 
      create_date, updata_date, status,special_id
      )
    values (#{idt,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{grade,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updataDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{specialId,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.sam.sct.mytest.entity.Grade">
        insert into t_grade
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="idt != null">
                idt,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="grade != null">
                grade,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updataDate != null">
                updata_date,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="specialId != null">
                special_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="idt != null">
                #{idt,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="grade != null">
                #{grade,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updataDate != null">
                #{updataDate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="specialId != null">
                #{specialId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.sam.sct.mytest.entity.Grade">
        update t_grade
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="grade != null">
                grade = #{grade,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updataDate != null">
                updata_date = #{updataDate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="specialId != null">
                special_id = #{specialId,jdbcType=INTEGER},
            </if>
        </set>
        where idt = #{idt,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sam.sct.mytest.entity.Grade">
    update t_grade
    set user_id = #{userId,jdbcType=INTEGER},
      grade = #{grade,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      updata_date = #{updataDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      special_id = #{specialId,jdbcType=INTEGER}
    where idt = #{idt,jdbcType=INTEGER}
  </update>

    <!--新加的方法-->
    <select id="selectTop" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from t_grade
        WHERE special_id=#{specialId,jdbcType=INTEGER}
        ORDER BY grade DESC limit ${num}
    </select>
    <resultMap id="BaseResultMap2" type="com.sam.sct.mytest.ucenter.vo.GradeWithRank">
        <id column="idt" property="idt" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="grade" property="grade" jdbcType="INTEGER"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="updata_date" property="updataDate" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="special_id" property="specialId" jdbcType="INTEGER"/>
        <result column="rank" property="rank" jdbcType="INTEGER"/>
    </resultMap>
    <!--这个sql主要是实现排名的功能-->
    <select id="seleGradeByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap2">
        select t.*,t.grade,
        (select count(s.grade)+1 from t_grade s where s.grade>t.grade and s.special_id=#{specialId,jdbcType=INTEGER} and s.status = 1) rank
        from t_grade t where t.user_id=#{userId,jdbcType=INTEGER} and t.special_id=#{specialId,jdbcType=INTEGER} and t.status = 1 order by t.grade desc ;
  </select>
</mapper>